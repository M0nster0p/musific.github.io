:root {
    --background-color: #011122d3; /* Dark Royal Blue */
    --panel-background-color: #1C1C1C; /* Dark panel background */
    --card-background-color: #2A2A2A; /* Dark card background */
    --text-primary: #FFFFFF; /* White for primary text */
    --text-secondary: #D3D3D3; /* Light gray for secondary text */
    --text-muted: #A9A9A9; /* Medium gray for muted text */
    --highlight-color: #957C3D; /* Gold for highlights and important elements */
    --highlight-color-glow: #e2c680; /* Gold for highlights and important elements */
    --button-primary: #4169E1; /* Royal Blue for primary buttons */
    --button-secondary: #50C878; /* Emerald Green for secondary buttons */
    --button-danger: #9B111E; /* Ruby Red for danger buttons */
}

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    overflow: hidden;
    background-color: var(--background-color);
    color: var(--text-primary);
}

header {
    background-color: var(--panel-background-color);
    padding: 10px 20px;
    flex-shrink: 0;
}

.nav-list {
    list-style: none;
    padding: 0;
    display: flex;
    gap: 20px;
}

.nav-list a {
    color: var(--text-muted);
    text-decoration: none;
}
.nav-list a:hover {
    transition: 0.5s;
    color: var(--text-primary);
}

.logo {
    width: 90px;
}

.search-container {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px;
    background-color: var(--card-background-color);
    border-radius: 4px;
    flex-shrink: 0;
}

.search-container input[type="text"] {
    flex: 1;
    padding: 8px;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    background-color: var(--panel-background-color);
    color: var(--text-secondary);
}


/* Hide the default radio button */
input[type="radio"] {
    display: none;
}

/* Create a custom radio button */
input[type="radio"] + label::before {
    content: "";
    display: inline-block;
    width: 16px;
    height: 16px;
    border: 2px solid var(--button-secondary);
    border-radius: 50%;
    margin-right: 8px;
    vertical-align: middle;
    transition: background-color 0.3s, border-color 0.3s;
}

/* Style the radio button when checked */
input[type="radio"]:checked + label::before {
    background-color: var(--button-secondary);
    border-color: var(--button-secondary);
}

/* Add this if you want to style the label text color */
input[type="radio"] + label {
    color: var(--text-muted);
    cursor: pointer;
}

/* Optional: change label text color on hover */
input[type="radio"] + label:hover {
    color: var(--text-primary);
}
/* In your CSS */
.radio-label {
    color: var(--text-muted);
}

input[type="radio"]:checked + .radio-label {
    color: var(--highlight-color);
}
.radio-label:hover {
    transition: 0.5s;
    color: var(--text-primary);
}
input[type="radio"]:checked + .radio-label:hover {
    transition: 0.5s;
    color: var(--highlight-color-glow);
}


.search-container button {
    padding: 8px 16px;
    margin-left: 10px;
    background-color: var(--highlight-color);
    color: var(--text-muted);
    border: none;
    border-radius: 4px;
    font-size: 16px;
    cursor: pointer;
}

.search-container button:hover {
    transition: 500ms;
    background-color: var(--highlight-color);
    color: var(--text-primary);
}

.filter-container {
    display: flex;
    justify-content: center;
    margin-top: 10px;
    padding-bottom: 5px;
    flex-shrink: 0;
    color: var(--text-muted);
}
.filter-container:hover {
    color: var(--text-muted);
}

.filter-container label {
    margin: 0 10px;
    font-size: 16px;
}
.filter-container label {
    color: var(--text-muted);
}
.filter-container label:hover {
    transition: 500ms;
    color: var(--text-primary);
}

.content-container {
    display: flex;
    padding: 20px;
    gap: 12px;
    flex: 1;
    overflow-y: auto;
    background-color: var(--background-color);
    color: var(--text-primary);
}

.queue-container {
    flex: 1;
    max-width: 300px;
    padding: 20px;
    background-color: var(--panel-background-color);
    border-radius: 12px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    overflow-y: auto;
    height: calc(100vh - 300px);
}

.card-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(229px, 1fr));
    gap: 20px;
    flex: 3;
    overflow-y: auto;
    height: calc(100vh - 240px);
}

.card {
    border: 1px solid var(--highlight-color);
    border-radius: 10px;
    padding: 16px;
    text-align: left;
    position: relative;
    max-width: 250px;
    background-color: var(--card-background-color);
    color: var(--text-primary);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Add shadow to current song image */

}

.card img {
    border: 1px solid var(--highlight-color);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Add shadow to current song image */
    border-radius: 12px; ;
    max-width: 100%;
    height: auto;
    margin-bottom: 10px;
}

.card .play-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 10px;
    background-color: var(--highlight-color);
    color: var(--text-muted);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    font-size: 18px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    transition: background-color 0.3s ease;
}

.card .play-button:hover {
    background-color: #7f692b; /* Darken the color on hover */
    color: var(--text-primary);
}

a {
    text-decoration: none;
}

.queue-song {
    cursor: pointer;
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    color: var(--text-muted);
}
.queue-song:hover {
    color: var(--text-secondary);
}

.queue-song img {
    width: 50px;
    height: 50px;
    margin-right: 10px;
    border-radius: 12px;
    overflow: hidden;
}

.queue-song.playing {
    border-radius: 12px;
    overflow: hidden;
    background-color: var(--highlight-color);
    color: var(--text-primary);
    font-weight: bold;
}

.queue-song.playing img {
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Add shadow to current song image */
}

.playbar {
    background-color: var(--panel-background-color);
    padding: 10px 20px;
    position: sticky;
    bottom: 0;
    width: 100%;
    box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.2);
    z-index: 10;
    flex-shrink: 0;
}

.playbar-content {
    filter: invert(1);
    display: flex;
    justify-content: center;
    align-items: center;
}

.control-button {
    background: none;
    border: none;
    margin: 0 10px;
    cursor: pointer;
}

.control-button img {
    width: 24px;
    height: 24px;
}
.control-button:hover img {
    transition: 0.4s;
    filter: invert(2);
}

@media screen and (max-width: 1000px) {
    .playbar-content {
        filter: invert(1);
        display: flex;
        justify-content: space-around;
        align-items: center;
    }
}

/* Custom scrollbar styles */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

::-webkit-scrollbar-track {
    background: transparent;
}

::-webkit-scrollbar-thumb {
    background-color: #444;
    border-radius: 10px;
    visibility: hidden;
}

.content-container:hover ::-webkit-scrollbar-thumb,
.queue-container:hover ::-webkit-scrollbar-thumb {
    visibility: visible;
}

::-webkit-scrollbar-thumb:hover {
    background: #222;
}

.seektime {
    width: 100%;
    display: flex;
    justify-content: space-evenly;
    padding: 5px;
}

.seekbar {
    height: 8px;
    width: 80%;
    background-color: darkgray;
    position: relative;
    border-radius: 12px;
    margin: 5px 0;
    cursor: pointer;
}

.seekbar .filled {
    transition: 500ms;
    height: 100%;
    background-color: #957c3dc4;
    border-radius: 12px;
    position: absolute;
    top: 0;
    left: 0;
}

.seekbar .circle {
    transition: 500ms;
    width: 16px;
    height: 16px;
    background-color: var(--button-primary);
    border-radius: 50%;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: 0;
    z-index: 1;
}

.countUptpDuration {
    color: var(--button-primary);
}
.countUptpDuration:hover {
    transition: 0.5s;
    color: var(--highlight-color-glow);
}

.durationOfSong {
    color: var(--button-primary);
}
.durationOfSong:hover {
    transition: 0.5s;
    color: var(--highlight-color-glow);
}

.seekbar .circle img {
    background-color: var(--highlight-color);
    display: block;
    width: 100%;
    height: auto;
    border-radius: 50%;
}

/* Media queries for responsiveness */
@media (max-width: 1200px) {
    .nav-list {
        gap: 15px;
    }

    .search-container input[type="text"] {
        font-size: 14px;
    }

    .search-container button {
        font-size: 14px;
    }

    .filter-container label {
        font-size: 14px;
    }

    .card-container {
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    }

    .queue-container {
        max-width: 250px;
        height: calc(100vh - 280px);
    }

    .card {
        padding: 12px;
    }
}

@media (max-width: 768px) {
    header {
        padding: 10px;
    }

    .nav-list {
        flex-direction: column;
        gap: 10px;
    }

    .search-container {
        flex-direction: column;
        align-items: stretch;
    }

    .search-container button {
        margin-left: 0;
        margin-top: 10px;
    }

    .filter-container {
        flex-direction: column;
        align-items: center;
    }

    .filter-container label {
        margin: 5px 0;
    }

    .content-container {
        flex-direction: column;
    }

    .queue-container {
        max-width: 100%;
        height: auto;
    }

    .card-container {
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    }
}

@media (max-width: 480px) {
    .logo {
        width: 70px;
    }

    .search-container input[type="text"] {
        font-size: 12px;
    }

    .search-container button {
        font-size: 12px;
    }

    .filter-container label {
        font-size: 12px;
    }

    .queue-container {
        padding: 10px;
    }

    .card {
        padding: 10px;
    }

    .card-container {
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    }
}
